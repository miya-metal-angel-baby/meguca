# Requires nginx >=1.4.
# NB: Make sure to start meguca with the -r flag, if reverse-proxying, and set
# the -R flag, if the proxy is on a different machine from the meguca instance.

upstream meguca {
	server 127.0.0.1:8000;
}

# Uncomment, if running image processing in a separate process
#upstream imager {
#        server 127.0.0.1:8001;
#}


# Additional WebSocket proxying support
map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

# this is used when we just want to redirect to https
#server {
#        listen 80;
#        server_name chen2.org; # meguca.org images.meguca.org;
#        location /.well-known/ {
#                alias /home/meguca/server/www/.well-known/;
#        }
#        location / {
#                return 301 http://$server_name$request_uri;
#        }
#}

#server {
## remove these two lines when SSL is enabled, and redirect to https from the above server block instead.
#	location /.well-known/ {
#		alias /home/meguca/server/www/.well-known/;
#	}
#	location / {
#		return 301 https://$server_name$request_uri;
#	}
#
#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/chen2.org/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/chen2.org/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
#
#}

server {
	server_name chen2.org *.chen2.org;
# SSL
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/chen2.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/chen2.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

# Gzip compression
	gzip on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript application/octet-stream;

# CloudFlare support
#	set_real_ip_from 103.21.244.0/22;
#	set_real_ip_from 103.22.200.0/22;
#	set_real_ip_from 103.31.4.0/22;
#	set_real_ip_from 104.16.0.0/12;
#	set_real_ip_from 108.162.192.0/18;
#	set_real_ip_from 131.0.72.0/22;
#	set_real_ip_from 141.101.64.0/18;
#	set_real_ip_from 162.158.0.0/15;
#	set_real_ip_from 172.64.0.0/13;
#	set_real_ip_from 173.245.48.0/20;
#	set_real_ip_from 188.114.96.0/20;
#	set_real_ip_from 190.93.240.0/20;
#	set_real_ip_from 197.234.240.0/22;
#	set_real_ip_from 198.41.128.0/17;
#	set_real_ip_from 2400:cb00::/32;
#	set_real_ip_from 2405:b500::/32;
#	set_real_ip_from 2606:4700::/32;
#	set_real_ip_from 2803:f800::/32;
#	set_real_ip_from 2c0f:f248::/32;
#	set_real_ip_from 2a06:98c0::/29;
#	real_ip_header CF-Connecting-IP;
#
#

	location / {
		proxy_pass http://meguca/;
		proxy_buffering off;
		client_max_body_size 100m;
		client_body_timeout 600s;
		proxy_read_timeout 36000s;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# WebSockets support
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}

# Uncomment, if running image processing in a separate process
#	location /api/upload {
#		proxy_pass http://imager;
#		proxy_buffering off;
#		client_max_body_size 100m;
#		client_body_timeout 600s;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	}
#
#	location /api/upload-hash {
#		proxy_pass http://imager;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	}
#
#	location /api/create-thread {
#		proxy_pass http://imager;
#		proxy_buffering off;
#		client_max_body_size 100m;
#		client_body_timeout 600s;
#		proxy_read_timeout 36000s;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	}
#
#	location /api/create-reply {
#		proxy_pass http://imager;
#		proxy_buffering off;
#		client_max_body_size 100m;
#		client_body_timeout 600s;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	}
#
#	location /assets/images {
#		proxy_pass http://imager;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	}
#
#	location /api/captcha {
#		proxy_pass http://imager;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	}

}


server {
    if ($host = chen2.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
	server_name chen2.org *.chen2.org;
    return 404; # managed by Certbot


}
